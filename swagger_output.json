{
  "openapi": "3.0.0",
  "info": {
    "title": "Kapipay API",
    "version": "1.0.0",
    "description": "Simple API Documentation.",
    "termsOfService": "http://develop.davibernardo.xyz/terms",
    "contact": {
      "email": "davi.bernardo@linkapi.com.br"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5050"
    },
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorization actions"
    },
    {
      "name": "Digital Account Actions",
      "description": "Account Actions"
    },
    {
      "name": "Companys",
      "description": "Company Actions"
    },
    {
      "name": "Invoice",
      "description": "Invoice Actions"
    },
    {
      "name": "Others",
      "description": "others routes"
    }
  ],
  "paths": {
    "/cep/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Create a user to login in API",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Name, Email and Password.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AddUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New user created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreated"
                }
              }
            }
          },
          "400": {
            "description": "Something goes wrong"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Login in application.",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "description": "User Email.",
            "type": "string",
            "required": true,
            "in": "body"
          },
          {
            "name": "password",
            "description": "User password.",
            "type": "string",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/forgot_password": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Endpoint to recover password.",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "description": "User Email.",
            "type": "string",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reset_password": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Endpoint to change password.",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "description": "User Email.",
            "type": "string",
            "required": true,
            "in": "body"
          },
          {
            "name": "token",
            "description": "Token received by email.",
            "type": "string",
            "required": true,
            "in": "body"
          },
          {
            "name": "password",
            "description": "A new user password.",
            "type": "string",
            "required": true,
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/data": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/balance": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/invoices": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/invoices/{id}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/status": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/documents": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/company-type": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/company": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/account/create": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/invoice": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/documents/{id}": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "formData": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/payment_card": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "chargeId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/save_card": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/bank_account": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bankAccount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/account/bill_payment": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Parents": {
        "type": "object",
        "properties": {
          "father": {
            "type": "string",
            "example": "Simon Doe"
          },
          "mother": {
            "type": "string",
            "example": "Marie Doe"
          }
        },
        "xml": {
          "name": "Parents"
        }
      },
      "AddUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João do Caminhão"
          },
          "email": {
            "type": "string",
            "example": "joaodocaminhao@uol.com.br"
          },
          "password": {
            "type": "string",
            "example": "soujoao123"
          }
        },
        "xml": {
          "name": "AddUser"
        }
      },
      "UserCreated": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João do Caminhão"
          },
          "email": {
            "type": "string",
            "example": "joaodocaminhao@uol.com.br"
          },
          "id": {
            "type": "string",
            "example": "string"
          },
          "createdAt": {
            "type": "string",
            "example": "string"
          },
          "token": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "UserCreated"
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João do Caminhão"
          },
          "email": {
            "type": "string",
            "example": "joaodocaminhao@uol.com.br"
          },
          "id": {
            "type": "string",
            "example": "numericaltoken"
          },
          "createdAt": {
            "type": "string",
            "example": "date"
          },
          "token": {
            "type": "string",
            "example": "Bearer token"
          }
        },
        "xml": {
          "name": "UserProfile"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}